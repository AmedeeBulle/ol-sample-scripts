# Custom parameter for the builder
# You can set / override any parameter in this file.
# Alternatively you can use it as a template and pass the actual file as
# parameter to the builder.
# You need at least provide the mandatory parameters

#
# Mandatory parameters
#

# Workspace for the builder and location of the artifacts
WORKSPACE=
# ISO_URL -- location of the ISO file
# Can be local (file://) or remote (http://) but it must be an URL
ISO_URL=
# ISO_SHA1 -- checksum for the ISO file
ISO_SHA1_CHECKSUM=

#
# Optional parameters
#

# Distribution (Default is ol7-slim)
# DISTR=
# Cloud provider (Default is none)
CLOUD="none"

# Build BUILD_NUMBER (Default is 0)
# BUILD_NUMBER=

# Root access to the VM at least one method must be provided:
# Root account password (Default is empty)
# SSH_PASSWORD=
# Path to an ssh private/public key pair (Default none). The public key will
# be installed for the root user
# SSH_KEY_FILE=
# Lock root account after provisioning? (Default: yes)
# LOCK_ROOT=

# Kickstart file needs to be provided via a http. We spawn a basic web server
# during the build.
# This is the default host IP as seen on the VirtualBox NAT interface.
# HOST_IP="10.0.2.2"
# The server will listen on this port
# HOST_PORT=8000


#
# Override examples
#

# Setup swap? (Yes/No, default is distribution / cloud specific)
# SETUP_SWAP=

# Root filesystem: btrfs or xfs (Default: xfs)
# ROOT_FS=

# Which kernel? (uek, rhck, modrhck, default is distribution / cloud specific)
# KERNEL=

# Number of CPUs for the build VM (Default: 4)
# CPU_NUM=
# Memory allocated to the build VM (Default: 8192)
# MEM_SIZE=

# Allocated disk size for the image, default is distribution / cloud specific
# DISK_SIZE_GB=

# OVM Image version (Default: 1.0)
# IMAGE_VERSION=

# OCI / OLVM:
# Install cloud-init? (Yes/No, default is Yes for OCI and No for OLVM)
# CLOUD_INIT=
# cloud-init user (Default is "opc" for OCI and "cloud-user" for OLVM)
# CLOUD_USER=
